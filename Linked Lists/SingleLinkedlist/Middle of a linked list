
class Node {
    int data;
    Node* next;

    Node(int x){
        data = x;
        next = NULL;
    }

};

class Solution {
private:
int getLength(Node* head){
    Node* temp = head;
        int length = 0;
        while(temp!=NULL){
            length++;
            temp = temp-> next;
        }
        return length;
}
  public:
    int getMiddle(Node* head) {
        int count = 0; 
        int length = getLength(head);
        int middle = length/2;
        Node* temp = head;
        
        while(count< middle){
            temp = temp-> next;
            count++;
        }
        return temp-> data;
    }
};
//hare tortoise method
 Node* slowptr = head;
    Node* fastptr = head;

    while (fastptr != NULL && fastptr->next != NULL) {

        // move the fast pointer by two nodes
        fastptr = fastptr->next->next;

        // move the slow pointer by one node
        slowptr = slowptr->next;
    }

    return slowptr->data;
